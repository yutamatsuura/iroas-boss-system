version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: boss_postgres
    environment:
      POSTGRES_DB: boss_local
      POSTGRES_USER: boss_user
      POSTGRES_PASSWORD: boss_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - boss_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boss_user -d boss_local"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: boss_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - boss_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boss_backend
    environment:
      - DATABASE_URL=postgresql://boss_user:boss_password@postgres:5432/boss_local
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - boss_network
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: boss_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - boss_network
    command: npm run dev -- --host

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: boss_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@boss-system.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - boss_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  boss_network:
    driver: bridge